[["data-transformation.html", "Chapter 3 Data transformation 3.1 Read data 3.2 Cleaning 3.3 Data use for next few parts", " Chapter 3 Data transformation library(readxl) library(tidyverse) library(ggplot2) library(stringr) library(redav) library(mi) library(ggpubr) 3.1 Read data Our data is come from Open Door, which is sponsored by the U.S. Government and Institute of International Education. The original data file format is Microsoft Excel, and NA is represent by “-”. More, the first column name of place code is empty, so we name it by Code of Origin. projdata &lt;- read_excel(&quot;Census_All-Places-of-Origin_OD21.xlsx&quot;, col_types = c(&quot;numeric&quot;, &quot;text&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;), na = &quot;-&quot;, col_names = T) names(projdata)[1] &lt;- &quot;Code of Origin&quot; projdata &lt;- projdata %&gt;% select(`Place of Origin`,`Code of Origin`, `1949/50`:`2020/21`) knitr::kable( head(projdata[, 1:8], 4), booktabs = TRUE, caption = &#39;A table of the first 4 rows of our final project data.&#39; ) Table 3.1: A table of the first 4 rows of our final project data. Place of Origin Code of Origin 1949/50 1954/55 1959/60 1964/65 1969/70 1974/75 NA NA NA NA NA NA NA NA AFRICA, SUB-SAHARAN 1000 537 862 1346 5259 6064 16040 Africa, Sub-saharan, Unspecified NA 19 NA NA 9 17 30 NA NA NA NA NA NA NA NA Here we can see the data have meaningless NA row, and the value in Place of Origin not unified into one logistic type, for example, all value in side are countries or regions. Thus, we need to cleaning them before analysis. 3.2 Cleaning 3.2.1 Remove the empty row and extra notes in data uselessRow &lt;- rowSums(is.na(projdata)) == ncol(projdata) numNARow &lt;- sum(uselessRow) numNARow ## [1] 30 projdata &lt;- projdata[!uselessRow,] %&gt;% filter(!grepl(&quot;:&quot;,`Place of Origin`)) sum(rowSums(is.na(projdata)) == ncol(projdata)) ## [1] 0 knitr::kable( tail(projdata[, 1:8], 3), booktabs = TRUE, caption = &#39;A table of the last 3 rows to check no extra information.&#39; ) Table 3.2: A table of the last 3 rows to check no extra information. Place of Origin Code of Origin 1949/50 1954/55 1959/60 1964/65 1969/70 1974/75 Pacific Islands, Unspecified NA NA 15 38 145 327 1263 Stateless 9901 195 42 93 205 341 134 WORLD TOTAL NA 26433 34232 48486 82045 134959 154580 Here we can see we remove the empty rows and notes in the end. Then we can clean the value. 3.2.2 Unified logic type of value and group In this part, we first remove the grouped summary, then deal with the former country and grouped unspecified. We assign them, based their code, on eight Continents, which are: Africa, Asia, Europe, Latin America &amp; Caribbean, Middle East, North America, Oceania and Unknown State. In addition, we grouped the Unspecified countries/regions to unspecified eight continents to facilitate future analysis. projdata.re.state &lt;- projdata %&gt;% filter(!grepl(&quot;[0-9][0-9]00&quot;, `Code of Origin`)) %&gt;% filter(!grepl(&quot;[A-Z]+$&quot;, `Place of Origin`)) %&gt;% mutate(Continents = case_when(substring(`Code of Origin`, 1, 1) == 1 ~ &quot;Africa&quot;, substring(`Code of Origin`, 1, 1) == 2 ~ &quot;Asia&quot;, substring(`Code of Origin`, 1, 1) == 3 ~ &quot;Europe&quot;, substring(`Code of Origin`, 1, 1) == 4 ~ &quot;Latin America &amp; Caribbean&quot;, substring(`Code of Origin`, 1, 1) == 5 ~ &quot;Middle East&quot;, substring(`Code of Origin`, 1, 1) == 6 ~ &quot;North America&quot;, substring(`Code of Origin`, 1, 1) == 7 ~ &quot;Oceania&quot;, `Place of Origin` == &quot;Stateless&quot; ~ &quot;Unknown State&quot; ) ) projdata.re.state[projdata.re.state$`Place of Origin` == &quot;Bermuda&quot;,]$Continents &lt;- &quot;Latin America &amp; Caribbean&quot; temp.data &lt;- projdata.re.state %&gt;% filter(grepl(&quot;[0-9]999&quot;, `Code of Origin`) | is.na(`Code of Origin`)) temp.data.unsp &lt;- temp.data %&gt;% filter(grepl(&quot;Unspecified&quot;,`Place of Origin`) ) %&gt;% mutate(Continents = case_when(grepl(&quot;Africa&quot;,`Place of Origin`) ~ &quot;Africa&quot;, grepl(&quot;Asia&quot;,`Place of Origin`) ~ &quot;Asia&quot;, grepl(&quot;Europe&quot;,`Place of Origin`) ~ &quot;Europe&quot;, grepl(&quot;Latin America &amp; Caribbean&quot;,`Place of Origin`) ~ &quot;Latin America &amp; Caribbean&quot;, grepl(&quot;South America&quot;,`Place of Origin`) ~ &quot;Latin America &amp; Caribbean&quot;, grepl(&quot;Caribbean&quot;,`Place of Origin`) ~ &quot;Latin America &amp; Caribbean&quot;, grepl(&quot;Mexico&quot;,`Place of Origin`) ~ &quot;Latin America &amp; Caribbean&quot;, grepl(&quot;Middle East&quot;,`Place of Origin`) ~ &quot;Middle East&quot;, grepl(&quot;North America&quot;,`Place of Origin`) ~ &quot;North America&quot;, grepl(&quot;Pacific&quot;,`Place of Origin`) ~ &quot;Oceania&quot; ) ) %&gt;% group_by(Continents) %&gt;% summarize(.,across(where(is.numeric), ~sum(.x, na.rm = T))) %&gt;% mutate(`Place of Origin` = paste(Continents, &quot;Unspecified&quot;, sep = &quot;, &quot;)) %&gt;% select(`Place of Origin`, `Code of Origin`, `1949/50`:`2020/21`, Continents) temp.data.fna &lt;- temp.data %&gt;% filter(!grepl(&quot;Unspecified&quot;,`Place of Origin`) ) %&gt;% mutate(Continents = case_when(grepl(&quot;Former&quot;,`Place of Origin`) ~ &quot;Europe&quot;, grepl(&quot;Serbia&quot;,`Place of Origin`) ~ &quot;Europe&quot;, grepl(&quot;Antilles&quot;,`Place of Origin`) ~ &quot;Latin America &amp; Caribbean&quot;, grepl(&quot;Sahara&quot;,`Place of Origin`) ~ &quot;Africa&quot; ) ) 3.3 Data use for next few parts We combine the unspecified Continents data to grouped data, and get the final data set we will use for analysis. df &lt;- projdata.re.state %&gt;% filter(!grepl(&quot;Unspecified&quot;,`Place of Origin`) ) %&gt;% rows_update(temp.data.fna, by = &quot;Place of Origin&quot;) %&gt;% rbind(., temp.data.unsp) knitr::kable( head(df[, 1:8], 6), booktabs = TRUE, caption = &#39;A table of the first 6 rows of data ready for use in the future analysis.&#39; ) Table 3.3: A table of the first 6 rows of data ready for use in the future analysis. Place of Origin Code of Origin 1949/50 1954/55 1959/60 1964/65 1969/70 1974/75 Burundi 1101 NA NA NA 6 6 5 Djibouti 1102 NA NA NA NA NA 1 Eritrea 1103 NA NA NA NA NA NA Ethiopia 1104 37 62 170 266 540 2050 Kenya 1105 NA 19 156 774 492 870 Rwanda 1106 NA NA NA 2 1 4 In next chapter, we will discuss the missing values of our data. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
